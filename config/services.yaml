# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    doctrine_behaviors_blameable_user_entity: App\Entity\User
    doctrine_behaviors_timestampable_date_field_type: "datetime"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Repository/CoverageCatchup/ChartRepo.php}'


    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\UserCreateListener:
        arguments: ['@security.token_storage']
        tags:
            -
                name: doctrine.orm.entity_listener
                event: prePersist
                entity: App\Entity\User

    App\EventListener\UserInteractiveLoginListener:
        tags:
            -
                name: 'kernel.event_listener'
                event: 'security.interactive_login'
                method: 'onSecurityInteractiveLogin'

    App\EventListener\UserLoginSuccessListener:
        tags:
            - name: 'kernel.event_listener'
              event: 'security.authentication.success'
              method: 'onSecurityAuthenticationSuccess'

    App\Menu\MenuBuilder:
        arguments: ["@knp_menu.factory",
                    '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface',
                    '@Symfony\Component\Security\Core\Role\RoleHierarchyInterface',
                    '@Symfony\Component\HttpFoundation\RequestStack']
        tags:
            - { name: 'knp_menu.menu_builder', method: mainMenu, alias: main }
            - { name: 'knp_menu.menu_builder', method: sideMenu, alias: side }
            - { name: 'knp_menu.menu_builder', method: covid19Menu, alias: covidMenu }

    Sg\DatatablesBundle\Datatable\DatatableFactory:
        alias: sg_datatables.factory
    Sg\DatatablesBundle\Response\DatatableResponse:
        alias: sg_datatables.response


